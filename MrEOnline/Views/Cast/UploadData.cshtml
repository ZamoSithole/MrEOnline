@model MrE.Models.Entities.Cast

@{
    ViewBag.Title = "Upload Image";
}

<div class="card">
    <div class="card-header">@ViewBag.Title</div>
    <div class="card-body">

        @using (Html.BeginForm("UploadData", "Cast", FormMethod.Post, new { enctype = "multipart/form-data" })) {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            @Html.HiddenFor(m => m.FirstName)
            @Html.HiddenFor(m => m.LastName)
            @Html.HiddenFor(m => m.TitleId)
            @Html.HiddenFor(m => m.VideoId)
            @Html.HiddenFor(m => m.IsDeleted)
            @Html.HiddenFor(m => m.DateCreated)
            @Html.HiddenFor(m => m.DateUpdated)
            @Html.HiddenFor(m => m.DateDeleted)
            
            <div class="form-group">
                @Html.LabelFor(model => model.Data, htmlAttributes: new { @class = "control-label col-md-2" })
                <span class="btn btn-outline-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Select files...</span>
                    <!-- The file input field used as target for the file upload widget -->
                    <input type="file" id="Photo" name="upload" />
                </span>
            </div>
            <button type="submit" value="Save" class="btn btn-outline-info">
                <i class="fa fa-save"></i>&nbsp;Save
            </button>
            <a href=" @Url.Action("Edit","Video", new { id= Model.VideoId})" class="btn btn-outline-secondary">
                <i class="fa fa-times-circle"></i>&nbsp;Cancel
            </a>
        }
    </div>
</div>

